<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>Fable.Import.Browser</name></assembly>
<members>
<member name="P:Fable.Import.Browser.HTMLTableAlignment.vAlign(System.String)">
<summary>
 Sets or retrieves how text and other content are vertically aligned within the object that contains them.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableAlignment.chOff(System.String)">
<summary>
 Sets or retrieves a value that you can use to implement your own chOff functionality for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableAlignment.ch(System.String)">
<summary>
 Sets or retrieves a value that you can use to implement your own ch functionality for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableAlignment.vAlign">
<summary>
 Sets or retrieves how text and other content are vertically aligned within the object that contains them.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableAlignment.chOff">
<summary>
 Sets or retrieves a value that you can use to implement your own chOff functionality for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableAlignment.ch">
<summary>
 Sets or retrieves a value that you can use to implement your own ch functionality for the object.
</summary>
</member>
<member name="M:Fable.Import.Browser.URLSearchParams.set(System.String,System.String)">
<summary>
 Sets the value associated to a given search parameter to the given value. If there were several values, delete the others.
</summary>
</member>
<member name="M:Fable.Import.Browser.URLSearchParams.has(System.String)">
<summary>
 Returns a Boolean indicating if such a search parameter exists.
</summary>
</member>
<member name="M:Fable.Import.Browser.URLSearchParams.getAll(System.String)">
<summary>
 Returns all the values association with a given search parameter.
</summary>
</member>
<member name="M:Fable.Import.Browser.URLSearchParams.get(System.String)">
<summary>
 Returns the first value associated to the given search parameter.
</summary>
</member>
<member name="M:Fable.Import.Browser.URLSearchParams.delete(System.String)">
<summary>
 Deletes the given search parameter, and its associated value, from the list of all search parameters.
</summary>
</member>
<member name="M:Fable.Import.Browser.URLSearchParams.append(System.String,System.String)">
<summary>
 Appends a specified key/value pair as a new search parameter.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLVideoElement.videoWidth(System.Double)">
<summary>
 Gets the intrinsic width of a video in CSS pixels, or zero if the dimensions are not known.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLVideoElement.videoHeight(System.Double)">
<summary>
 Gets the intrinsic height of a video in CSS pixels, or zero if the dimensions are not known.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLVideoElement.poster(System.String)">
<summary>
 Gets or sets a URL of an image to display, for example, like a movie poster. This can be a still frame from the video, or another image if no video data is available.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLVideoElement.videoWidth">
<summary>
 Gets the intrinsic width of a video in CSS pixels, or zero if the dimensions are not known.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLVideoElement.videoHeight">
<summary>
 Gets the intrinsic height of a video in CSS pixels, or zero if the dimensions are not known.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLVideoElement.poster">
<summary>
 Gets or sets a URL of an image to display, for example, like a movie poster. This can be a still frame from the video, or another image if no video data is available.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.wrap(System.String)">
<summary>
 Sets or retrieves how to handle wordwrapping in the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.willValidate(System.Boolean)">
<summary>
 Returns whether an element will successfully validate based on forms validation rules and constraints.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.validity(Fable.Import.Browser.ValidityState)">
<summary>
 Returns a  ValidityState object that represents the validity states of an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.validationMessage(System.String)">
<summary>
 Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as &quot;this is a required field&quot;. The result is that the user sees validation messages without actually submitting.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.selectionStart(System.Double)">
<summary>
 Gets or sets the starting position or offset of a text selection.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.selectionEnd(System.Double)">
<summary>
 Gets or sets the end position or offset of a text selection.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.rows(System.Double)">
<summary>
 Sets or retrieves the number of horizontal rows contained in the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.required(System.Boolean)">
<summary>
 When present, marks an element that can&apos;t be submitted without a value.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.placeholder(System.String)">
<summary>
 Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.maxLength(System.Double)">
<summary>
 Sets or retrieves the maximum number of characters that the user can enter in a text control.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.defaultValue(System.String)">
<summary>
 Sets or retrieves the initial contents of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.cols(System.Double)">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.autofocus(System.Boolean)">
<summary>
 Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLTextAreaElement.setSelectionRange(System.Double,System.Double)">
 <param name="start">The offset into the text field for the start of the selection.</param>
 <param name="end">The offset into the text field for the end of the selection.</param>
</member>
<member name="M:Fable.Import.Browser.HTMLTextAreaElement.setCustomValidity(System.String)">
 <param name="error">Sets a custom error message that is displayed when a form is submitted.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.wrap">
<summary>
 Sets or retrieves how to handle wordwrapping in the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.willValidate">
<summary>
 Returns whether an element will successfully validate based on forms validation rules and constraints.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.validity">
<summary>
 Returns a  ValidityState object that represents the validity states of an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.validationMessage">
<summary>
 Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as &quot;this is a required field&quot;. The result is that the user sees validation messages without actually submitting.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.selectionStart">
<summary>
 Gets or sets the starting position or offset of a text selection.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.selectionEnd">
<summary>
 Gets or sets the end position or offset of a text selection.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.rows">
<summary>
 Sets or retrieves the number of horizontal rows contained in the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.required">
<summary>
 When present, marks an element that can&apos;t be submitted without a value.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.placeholder">
<summary>
 Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.maxLength">
<summary>
 Sets or retrieves the maximum number of characters that the user can enter in a text control.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.defaultValue">
<summary>
 Sets or retrieves the initial contents of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.cols">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTextAreaElement.autofocus">
<summary>
 Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLTextAreaElement.checkValidity">
<summary>
 Returns whether a form will validate when it is submitted, without having to submit it.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableSectionElement.rows(Fable.Import.Browser.HTMLCollection)">
<summary>
 Sets or retrieves the number of horizontal rows contained in the object.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLTableSectionElement.insertRow(Microsoft.FSharp.Core.FSharpOption{System.Double})">
 <param name="index">Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLTableSectionElement.rows">
<summary>
 Sets or retrieves the number of horizontal rows contained in the object.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLTableSectionElement.deleteRow(Microsoft.FSharp.Core.FSharpOption{System.Double})">
 <param name="index">Number that specifies the zero-based position in the rows collection of the row to remove.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLTableRowElement.sectionRowIndex(System.Double)">
<summary>
 Retrieves the position of the object in the collection.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableRowElement.rowIndex(System.Double)">
<summary>
 Retrieves the position of the object in the rows collection for the table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableRowElement.height(System.Object)">
<summary>
 Gets or sets the height of the video element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableRowElement.cells(Fable.Import.Browser.HTMLCollection)">
<summary>
 Retrieves a collection of all cells in the table row.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLTableRowElement.insertCell(Microsoft.FSharp.Core.FSharpOption{System.Double})">
 <summary>Creates a new cell in the table row, and adds the cell to the cells collection.</summary>
 <param name="index">Number that specifies where to insert the cell in the tr. The default value is -1, which appends the new cell to the end of the cells collection.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLTableRowElement.sectionRowIndex">
<summary>
 Retrieves the position of the object in the collection.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableRowElement.rowIndex">
<summary>
 Retrieves the position of the object in the rows collection for the table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableRowElement.height">
<summary>
 Gets or sets the height of the video element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableRowElement.cells">
<summary>
 Retrieves a collection of all cells in the table row.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLTableRowElement.deleteCell(Microsoft.FSharp.Core.FSharpOption{System.Double})">
 <summary>Removes the specified cell from the table row, as well as from the cells collection.</summary>
 <param name="index">Number that specifies the zero-based position of the cell to remove from the table row. If no value is provided, the last cell in the cells collection is deleted.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLTableHeaderCellElement.scope(System.String)">
<summary>
 Sets or retrieves the group of cells in a table to which the object&apos;s information applies.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableHeaderCellElement.scope">
<summary>
 Sets or retrieves the group of cells in a table to which the object&apos;s information applies.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.tHead(Fable.Import.Browser.HTMLTableSectionElement)">
<summary>
 Retrieves the tHead object of the table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.tFoot(Fable.Import.Browser.HTMLTableSectionElement)">
<summary>
 Retrieves the tFoot object of the table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.tBodies(Fable.Import.Browser.HTMLCollection)">
<summary>
 Retrieves a collection of all tBody objects in the table. Objects in this collection are in source order.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.summary(System.String)">
<summary>
 Sets or retrieves a description and/or structure of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.rules(System.String)">
<summary>
 Sets or retrieves which dividing lines (inner borders) are displayed.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.rows(Fable.Import.Browser.HTMLCollection)">
<summary>
 Sets or retrieves the number of horizontal rows contained in the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.height(System.Object)">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.cols(System.Double)">
<summary>
 Sets or retrieves the number of columns in the table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.cellSpacing(System.String)">
<summary>
 Sets or retrieves the amount of space between cells in a table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.cellPadding(System.String)">
<summary>
 Sets or retrieves the amount of space between the border of the cell and the content of the cell.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.caption(Fable.Import.Browser.HTMLTableCaptionElement)">
<summary>
 Retrieves the caption object of a table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.borderColor(System.Object)">
<summary>
 Sets or retrieves the border color of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.align(System.String)">
<summary>
 Sets or retrieves a value that indicates the table alignment.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLTableElement.insertRow(Microsoft.FSharp.Core.FSharpOption{System.Double})">
 <summary>Creates a new row (tr) in the table, and adds the row to the rows collection.</summary>
 <param name="index">Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.tHead">
<summary>
 Retrieves the tHead object of the table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.tFoot">
<summary>
 Retrieves the tFoot object of the table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.tBodies">
<summary>
 Retrieves a collection of all tBody objects in the table. Objects in this collection are in source order.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.summary">
<summary>
 Sets or retrieves a description and/or structure of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.rules">
<summary>
 Sets or retrieves which dividing lines (inner borders) are displayed.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.rows">
<summary>
 Sets or retrieves the number of horizontal rows contained in the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.height">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.cols">
<summary>
 Sets or retrieves the number of columns in the table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.cellSpacing">
<summary>
 Sets or retrieves the amount of space between cells in a table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.cellPadding">
<summary>
 Sets or retrieves the amount of space between the border of the cell and the content of the cell.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.caption">
<summary>
 Retrieves the caption object of a table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.borderColor">
<summary>
 Sets or retrieves the border color of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableElement.align">
<summary>
 Sets or retrieves a value that indicates the table alignment.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLTableElement.deleteTHead">
<summary>
 Deletes the tHead element and its contents from the table.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLTableElement.deleteTFoot">
<summary>
 Deletes the tFoot element and its contents from the table.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLTableElement.deleteRow(Microsoft.FSharp.Core.FSharpOption{System.Double})">
 <summary>Removes the specified row (tr) from the element and from the rows collection.</summary>
 <param name="index">Number that specifies the zero-based position in the rows collection of the row to remove.</param>
</member>
<member name="M:Fable.Import.Browser.HTMLTableElement.deleteCaption">
<summary>
 Deletes the caption element and its contents from the table.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLTableElement.createTHead">
<summary>
 Returns the tHead element object if successful, or null otherwise.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLTableElement.createTFoot">
<summary>
 Creates an empty tFoot element in the table.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLTableElement.createTBody">
<summary>
 Creates an empty tBody element in the table.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLTableElement.createCaption">
<summary>
 Creates an empty caption element in the table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableColElement.span(System.Double)">
<summary>
 Sets or retrieves the number of columns in the group.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableColElement.align(System.String)">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableColElement.span">
<summary>
 Sets or retrieves the number of columns in the group.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableColElement.align">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.width(System.String)">
<summary>
 Gets or sets the width of the video element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.scope(System.String)">
<summary>
 Sets or retrieves the group of cells in a table to which the object&apos;s information applies.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.rowSpan(System.Double)">
<summary>
 Sets or retrieves how many rows in a table the cell should span.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.height(System.Object)">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.headers(System.String)">
<summary>
 Sets or retrieves a list of header cells that provide information for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.colSpan(System.Double)">
<summary>
 Sets or retrieves the number columns in the table that the object should span.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.cellIndex(System.Double)">
<summary>
 Retrieves the position of the object in the cells collection of a row.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.axis(System.String)">
<summary>
 Sets or retrieves a comma-delimited list of conceptual categories associated with the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.align(System.String)">
<summary>
 Sets or retrieves a value that indicates the table alignment.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.abbr(System.String)">
<summary>
 Sets or retrieves abbreviated text for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.width">
<summary>
 Gets or sets the width of the video element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.scope">
<summary>
 Sets or retrieves the group of cells in a table to which the object&apos;s information applies.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.rowSpan">
<summary>
 Sets or retrieves how many rows in a table the cell should span.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.height">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.headers">
<summary>
 Sets or retrieves a list of header cells that provide information for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.colSpan">
<summary>
 Sets or retrieves the number columns in the table that the object should span.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.cellIndex">
<summary>
 Retrieves the position of the object in the cells collection of a row.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.axis">
<summary>
 Sets or retrieves a comma-delimited list of conceptual categories associated with the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.align">
<summary>
 Sets or retrieves a value that indicates the table alignment.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCellElement.abbr">
<summary>
 Sets or retrieves abbreviated text for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCaptionElement.vAlign(System.String)">
<summary>
 Sets or retrieves whether the caption appears at the top or bottom of the table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCaptionElement.align(System.String)">
<summary>
 Sets or retrieves the alignment of the object relative to the display or table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCaptionElement.vAlign">
<summary>
 Sets or retrieves whether the caption appears at the top or bottom of the table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLTableCaptionElement.align">
<summary>
 Sets or retrieves the alignment of the object relative to the display or table.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLStyleElement.media(System.String)">
<summary>
 Sets or retrieves the media type.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLStyleElement.media">
<summary>
 Sets or retrieves the media type.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSourceElement.media(System.String)">
<summary>
 Gets or sets the intended media type of the media source.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSourceElement.media">
<summary>
 Gets or sets the intended media type of the media source.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.willValidate(System.Boolean)">
<summary>
 Returns whether an element will successfully validate based on forms validation rules and constraints.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.validity(Fable.Import.Browser.ValidityState)">
<summary>
 Returns a  ValidityState object that represents the validity states of an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.validationMessage(System.String)">
<summary>
 Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as &quot;this is a required field&quot;. The result is that the user sees validation messages without actually submitting.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.selectedIndex(System.Double)">
<summary>
 Sets or retrieves the index of the selected option in a select object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.required(System.Boolean)">
<summary>
 When present, marks an element that can&apos;t be submitted without a value.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.multiple(System.Boolean)">
<summary>
 Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.length(System.Double)">
<summary>
 Sets or retrieves the number of objects in a collection.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.autofocus(System.Boolean)">
<summary>
 Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLSelectElement.setCustomValidity(System.String)">
 <summary>Sets a custom error message that is displayed when a form is submitted.</summary>
 <param name="error">Sets a custom error message that is displayed when a form is submitted.</param>
</member>
<member name="M:Fable.Import.Browser.HTMLSelectElement.remove(Microsoft.FSharp.Core.FSharpOption{System.Double})">
 <param name="index">Number that specifies the zero-based index of the element to remove from the collection.</param>
</member>
<member name="M:Fable.Import.Browser.HTMLSelectElement.item(Microsoft.FSharp.Core.FSharpOption{System.Object},Microsoft.FSharp.Core.FSharpOption{System.Object})">
 <param name="name">Variant of type Number or String that specifies the object or collection to retrieve. If this parameter is a Number, it is the zero-based index of the object. If this parameter is a string, all objects with matching name or id properties are retrieved, and a collection is returned if more than one match is made.</param>
 <param name="index">Variant of type Number that specifies the zero-based index of the object to retrieve when a collection is returned.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.willValidate">
<summary>
 Returns whether an element will successfully validate based on forms validation rules and constraints.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.validity">
<summary>
 Returns a  ValidityState object that represents the validity states of an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.validationMessage">
<summary>
 Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as &quot;this is a required field&quot;. The result is that the user sees validation messages without actually submitting.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.selectedIndex">
<summary>
 Sets or retrieves the index of the selected option in a select object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.required">
<summary>
 When present, marks an element that can&apos;t be submitted without a value.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.multiple">
<summary>
 Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.length">
<summary>
 Sets or retrieves the number of objects in a collection.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLSelectElement.autofocus">
<summary>
 Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLSelectElement.checkValidity">
<summary>
 Returns whether a form will validate when it is submitted, without having to submit it.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLScriptElement.type(System.String)">
<summary>
 Retrieves the type of control.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLScriptElement.src(System.String)">
<summary>
 The address or URL of the a media resource that is to be considered.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLScriptElement.htmlFor(System.String)">
<summary>
 Sets or retrieves the object that is bound to the event script.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLScriptElement.event(System.String)">
<summary>
 Sets or retrieves the event for which the script is written.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLScriptElement.defer(System.Boolean)">
<summary>
 Sets or retrieves the status of the script.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLScriptElement.charset(System.String)">
<summary>
 Sets or retrieves the character set used to encode the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLScriptElement.type">
<summary>
 Retrieves the type of control.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLScriptElement.src">
<summary>
 The address or URL of the a media resource that is to be considered.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLScriptElement.htmlFor">
<summary>
 Sets or retrieves the object that is bound to the event script.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLScriptElement.event">
<summary>
 Sets or retrieves the event for which the script is written.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLScriptElement.defer">
<summary>
 Sets or retrieves the status of the script.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLScriptElement.charset">
<summary>
 Sets or retrieves the character set used to encode the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLProgressElement.position(System.Double)">
<summary>
 Returns the quotient of value/max when the value attribute is set (determinate progress bar), or -1 when the value attribute is missing (indeterminate progress bar).
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLProgressElement.position">
<summary>
 Returns the quotient of value/max when the value attribute is set (determinate progress bar), or -1 when the value attribute is missing (indeterminate progress bar).
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLPreElement.width(System.Double)">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLPreElement.width">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLParamElement.valueType(System.String)">
<summary>
 Sets or retrieves the data type of the value attribute.
 Retrieves or sets the text in the entry field of the textArea element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLParamElement.value(System.String)">
<summary>
 Sets or retrieves the value which is returned to the server when the form control is submitted.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLParamElement.type(System.String)">
<summary>
 Retrieves the CSS language in which the style sheet is written.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLParamElement.valueType">
<summary>
 Sets or retrieves the data type of the value attribute.
 Retrieves or sets the text in the entry field of the textArea element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLParamElement.value">
<summary>
 Sets or retrieves the value which is returned to the server when the form control is submitted.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLParamElement.type">
<summary>
 Retrieves the CSS language in which the style sheet is written.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLParagraphElement.align(System.String)">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLParagraphElement.align">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptionElement.value(System.String)">
<summary>
 Sets or gets the current value of a progress element. The value must be a non-negative number between 0 and the max value.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptionElement.text(System.String)">
<summary>
 Retrieves or sets the text of the object as a string.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptionElement.selected(System.Boolean)">
<summary>
 Sets or retrieves whether the option in the list box is the default item.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptionElement.label(System.String)">
<summary>
 Sets or retrieves a value that you can use to implement your own label functionality for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptionElement.index(System.Double)">
<summary>
 Sets or retrieves the ordinal position of an option in a list box.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptionElement.defaultSelected(System.Boolean)">
<summary>
 Sets or retrieves the status of an option.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptionElement.value">
<summary>
 Sets or gets the current value of a progress element. The value must be a non-negative number between 0 and the max value.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptionElement.text">
<summary>
 Retrieves or sets the text of the object as a string.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptionElement.selected">
<summary>
 Sets or retrieves whether the option in the list box is the default item.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptionElement.label">
<summary>
 Sets or retrieves a value that you can use to implement your own label functionality for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptionElement.index">
<summary>
 Sets or retrieves the ordinal position of an option in a list box.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptionElement.defaultSelected">
<summary>
 Sets or retrieves the status of an option.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptGroupElement.value(System.String)">
<summary>
 Sets or retrieves the value of an input parameter for an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptGroupElement.text(System.String)">
<summary>
 Retrieves or sets the text of the object as a string.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptGroupElement.selected(System.Boolean)">
<summary>
 Sets or retrieves whether the option in the list box is the default item.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptGroupElement.label(System.String)">
<summary>
 Sets or retrieves a value that you can use to implement your own label functionality for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptGroupElement.index(System.Double)">
<summary>
 Sets or retrieves the ordinal position of an option in a list box.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptGroupElement.defaultSelected(System.Boolean)">
<summary>
 Sets or retrieves the status of an option.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptGroupElement.value">
<summary>
 Sets or retrieves the value of an input parameter for an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptGroupElement.text">
<summary>
 Retrieves or sets the text of the object as a string.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptGroupElement.selected">
<summary>
 Sets or retrieves whether the option in the list box is the default item.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptGroupElement.label">
<summary>
 Sets or retrieves a value that you can use to implement your own label functionality for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptGroupElement.index">
<summary>
 Sets or retrieves the ordinal position of an option in a list box.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOptGroupElement.defaultSelected">
<summary>
 Sets or retrieves the status of an option.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.willValidate(System.Boolean)">
<summary>
 Returns whether an element will successfully validate based on forms validation rules and constraints.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.width(System.String)">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.validity(Fable.Import.Browser.ValidityState)">
<summary>
 Returns a  ValidityState object that represents the validity states of an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.validationMessage(System.String)">
<summary>
 Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as &quot;this is a required field&quot;. The result is that the user sees validation messages without actually submitting.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.useMap(System.String)">
<summary>
 Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.type(System.String)">
<summary>
 Gets or sets the MIME type of a media resource.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.standby(System.String)">
<summary>
 Sets or retrieves a message to be displayed while an object is loading.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.msPlayToSource(System.Object)">
<summary>
 Gets the source associated with the media element for use by the PlayToManager.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.msPlayToPrimary(System.Boolean)">
<summary>
 Gets or sets the primary DLNA PlayTo device.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.msPlayToDisabled(System.Boolean)">
<summary>
 Gets or sets whether the DLNA PlayTo device is available.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.height(System.String)">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.contentDocument(Fable.Import.Browser.Document)">
<summary>
 Retrieves the document object of the page or frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.codeType(System.String)">
<summary>
 Sets or retrieves the Internet media type for the code associated with the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.codeBase(System.String)">
<summary>
 Sets or retrieves the URL of the component.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.archive(System.String)">
<summary>
 Sets or retrieves a character string that can be used to implement your own archive functionality for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.altHtml(System.String)">
<summary>
 Gets or sets the optional alternative HTML script to execute if the object fails to load.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.align(System.String)">
<summary>
 Sets or retrieves the alignment of the caption or legend.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.BaseHref(System.String)">
<summary>
 Retrieves a string of the URL where the object tag can be found. This is often the href of the document that the object is in, or the value set by a base element.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLObjectElement.setCustomValidity(System.String)">
 <param name="error">Sets a custom error message that is displayed when a form is submitted.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.willValidate">
<summary>
 Returns whether an element will successfully validate based on forms validation rules and constraints.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.width">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.validity">
<summary>
 Returns a  ValidityState object that represents the validity states of an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.validationMessage">
<summary>
 Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as &quot;this is a required field&quot;. The result is that the user sees validation messages without actually submitting.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.useMap">
<summary>
 Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.type">
<summary>
 Gets or sets the MIME type of a media resource.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.standby">
<summary>
 Sets or retrieves a message to be displayed while an object is loading.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.msPlayToSource">
<summary>
 Gets the source associated with the media element for use by the PlayToManager.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.msPlayToPrimary">
<summary>
 Gets or sets the primary DLNA PlayTo device.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.msPlayToDisabled">
<summary>
 Gets or sets whether the DLNA PlayTo device is available.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.height">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.contentDocument">
<summary>
 Retrieves the document object of the page or frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.codeType">
<summary>
 Sets or retrieves the Internet media type for the code associated with the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.codeBase">
<summary>
 Sets or retrieves the URL of the component.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.archive">
<summary>
 Sets or retrieves a character string that can be used to implement your own archive functionality for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.altHtml">
<summary>
 Gets or sets the optional alternative HTML script to execute if the object fails to load.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.align">
<summary>
 Sets or retrieves the alignment of the caption or legend.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLObjectElement.BaseHref">
<summary>
 Retrieves a string of the URL where the object tag can be found. This is often the href of the document that the object is in, or the value set by a base element.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLObjectElement.checkValidity">
<summary>
 Returns whether a form will validate when it is submitted, without having to submit it.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOListElement.type(System.String)">
<summary>
 Retrieves the type of select control based on the value of the MULTIPLE attribute.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLOListElement.type">
<summary>
 Retrieves the type of select control based on the value of the MULTIPLE attribute.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLModElement.dateTime(System.String)">
<summary>
 Sets or retrieves the date and time of a modification to the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLModElement.cite(System.String)">
<summary>
 Sets or retrieves reference information about the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLModElement.dateTime">
<summary>
 Sets or retrieves the date and time of a modification to the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLModElement.cite">
<summary>
 Sets or retrieves reference information about the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMetaElement.url(System.String)">
<summary>
 Sets or retrieves the URL property that will be loaded after the specified time has elapsed.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMetaElement.scheme(System.String)">
<summary>
 Sets or retrieves a scheme to be used in interpreting the value of a property specified for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMetaElement.httpEquiv(System.String)">
<summary>
 Gets or sets information used to bind the value of a content attribute of a meta element to an HTTP response header.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMetaElement.charset(System.String)">
<summary>
 Sets or retrieves the character set used to encode the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMetaElement.url">
<summary>
 Sets or retrieves the URL property that will be loaded after the specified time has elapsed.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMetaElement.scheme">
<summary>
 Sets or retrieves a scheme to be used in interpreting the value of a property specified for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMetaElement.httpEquiv">
<summary>
 Gets or sets information used to bind the value of a content attribute of a meta element to an HTTP response header.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMetaElement.charset">
<summary>
 Sets or retrieves the character set used to encode the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMenuElement.type(System.String)">
<summary>
 Sets or retrieves the MIME type for the associated scripting engine.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMenuElement.type">
<summary>
 Sets or retrieves the MIME type for the associated scripting engine.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.volume(System.Double)">
<summary>
 Gets or sets the volume level for audio portions of the media element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.textTracks(Fable.Import.Browser.TextTrackList)">
<summary>
 Sets or retrieves the text string specified by the option tag.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.src(System.String)">
<summary>
 Retrieves the URL to an external file that contains the source code or data.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.seeking(System.Boolean)">
<summary>
 Gets a flag that indicates whether the the client is currently moving to a new playback position in the media resource.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.seekable(Fable.Import.Browser.TimeRanges)">
<summary>
 Returns a TimeRanges object that represents the ranges of the current media resource that can be seeked.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.preload(System.String)">
<summary>
 Gets or sets the current playback position, in seconds.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.played(Fable.Import.Browser.TimeRanges)">
<summary>
 Gets TimeRanges for the current media resource that has been played.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.playbackRate(System.Double)">
<summary>
 Gets or sets the current rate of speed for the media resource to play. This speed is expressed as a multiple of the normal speed of the media resource.
 Loads and starts playback of a media resource.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.paused(System.Boolean)">
<summary>
 Gets a flag that specifies whether playback is paused.
 Pauses the current playback and sets paused to TRUE. This can be used to test whether the media is playing or paused. You can also use the pause or play events to tell whether the media is playing or not.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.networkState(System.Double)">
<summary>
 Gets the current network activity for the element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.muted(System.Boolean)">
<summary>
 Gets or sets a flag that indicates whether the audio (either audio or the audio track on video media) is muted.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msRealTime(System.Boolean)">
<summary>
 Specifies whether or not to enable low-latency playback on the media element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msPlayToSource(System.Object)">
<summary>
 Gets the source associated with the media element for use by the PlayToManager.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msPlayToPrimary(System.Boolean)">
<summary>
 Gets or sets the primary DLNA PlayTo device.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msPlayToPreferredSourceUri(System.String)">
<summary>
 Gets or sets the path to the preferred media source. This enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msPlayToDisabled(System.Boolean)">
<summary>
 Gets or sets whether the DLNA PlayTo device is available.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msKeys(Fable.Import.Browser.MSMediaKeys)">
<summary>
 Gets the MSMediaKeys object, which is used for decrypting media data, that is associated with this media element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msAudioDeviceType(System.String)">
<summary>
 Specifies the output device id that the audio will be sent to.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msAudioCategory(System.String)">
<summary>
 Specifies the purpose of the audio or video media, such as background audio or alerts.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.error(Fable.Import.Browser.MediaError)">
<summary>
 Returns an object representing the current error state of the audio or video element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.ended(System.Boolean)">
<summary>
 Gets information about whether the playback has ended or not.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.duration(System.Double)">
<summary>
 Returns the duration in seconds of the current media resource. A NaN value is returned if duration is not available, or Infinity if the media resource is streaming.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.defaultPlaybackRate(System.Double)">
<summary>
 Gets or sets the default playback rate when the user is not using fast forward or reverse for a video or audio resource.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.currentTime(System.Double)">
<summary>
 Gets or sets the current playback position, in seconds.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.controls(System.Boolean)">
<summary>
 Gets or sets a flag that indicates whether the client provides a set of controls for the media (in case the developer does not include controls for the player).
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.buffered(Fable.Import.Browser.TimeRanges)">
<summary>
 Gets a collection of buffered time ranges.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.autoplay(System.Boolean)">
<summary>
 Gets or sets a value that indicates whether to start playing the media automatically.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.audioTracks(Fable.Import.Browser.AudioTrackList)">
<summary>
 Returns an AudioTrackList object with the audio tracks for a given video element.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLMediaElement.msSetMediaProtectionManager(Microsoft.FSharp.Core.FSharpOption{System.Object})">
<summary>
 Specifies the media protection manager for a given media pipeline.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLMediaElement.msInsertAudioEffect(System.String,System.Boolean,Microsoft.FSharp.Core.FSharpOption{System.Object})">
<summary>
 Inserts the specified audio effect into media pipeline.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLMediaElement.msClearEffects">
<summary>
 Clears all effects from the media pipeline.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLMediaElement.load">
<summary>
 Resets the audio or video object and loads a new media resource.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.volume">
<summary>
 Gets or sets the volume level for audio portions of the media element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.textTracks">
<summary>
 Sets or retrieves the text string specified by the option tag.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.src">
<summary>
 Retrieves the URL to an external file that contains the source code or data.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.seeking">
<summary>
 Gets a flag that indicates whether the the client is currently moving to a new playback position in the media resource.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.seekable">
<summary>
 Returns a TimeRanges object that represents the ranges of the current media resource that can be seeked.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.preload">
<summary>
 Gets or sets the current playback position, in seconds.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.played">
<summary>
 Gets TimeRanges for the current media resource that has been played.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.playbackRate">
<summary>
 Gets or sets the current rate of speed for the media resource to play. This speed is expressed as a multiple of the normal speed of the media resource.
 Loads and starts playback of a media resource.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.paused">
<summary>
 Gets a flag that specifies whether playback is paused.
 Pauses the current playback and sets paused to TRUE. This can be used to test whether the media is playing or paused. You can also use the pause or play events to tell whether the media is playing or not.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.networkState">
<summary>
 Gets the current network activity for the element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.muted">
<summary>
 Gets or sets a flag that indicates whether the audio (either audio or the audio track on video media) is muted.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msRealTime">
<summary>
 Specifies whether or not to enable low-latency playback on the media element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msPlayToSource">
<summary>
 Gets the source associated with the media element for use by the PlayToManager.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msPlayToPrimary">
<summary>
 Gets or sets the primary DLNA PlayTo device.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msPlayToPreferredSourceUri">
<summary>
 Gets or sets the path to the preferred media source. This enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msPlayToDisabled">
<summary>
 Gets or sets whether the DLNA PlayTo device is available.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msKeys">
<summary>
 Gets the MSMediaKeys object, which is used for decrypting media data, that is associated with this media element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msAudioDeviceType">
<summary>
 Specifies the output device id that the audio will be sent to.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.msAudioCategory">
<summary>
 Specifies the purpose of the audio or video media, such as background audio or alerts.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.error">
<summary>
 Returns an object representing the current error state of the audio or video element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.ended">
<summary>
 Gets information about whether the playback has ended or not.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.duration">
<summary>
 Returns the duration in seconds of the current media resource. A NaN value is returned if duration is not available, or Infinity if the media resource is streaming.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.defaultPlaybackRate">
<summary>
 Gets or sets the default playback rate when the user is not using fast forward or reverse for a video or audio resource.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.currentTime">
<summary>
 Gets or sets the current playback position, in seconds.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.controls">
<summary>
 Gets or sets a flag that indicates whether the client provides a set of controls for the media (in case the developer does not include controls for the player).
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.buffered">
<summary>
 Gets a collection of buffered time ranges.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.autoplay">
<summary>
 Gets or sets a value that indicates whether to start playing the media automatically.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMediaElement.audioTracks">
<summary>
 Returns an AudioTrackList object with the audio tracks for a given video element.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLMediaElement.canPlayType(System.String)">
<summary>
 Returns a string that specifies whether the client can play a given media resource type.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLMarqueeElement.start">
<summary>
 The starting number.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMarqueeElement.width(System.String)">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMarqueeElement.loop(System.Double)">
<summary>
 Gets or sets a flag to specify whether playback should restart after it completes.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMarqueeElement.height(System.String)">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMarqueeElement.width">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMarqueeElement.loop">
<summary>
 Gets or sets a flag to specify whether playback should restart after it completes.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMarqueeElement.height">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMapElement.name(System.String)">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMapElement.areas(Fable.Import.Browser.HTMLAreasCollection)">
<summary>
 Retrieves a collection of the area objects defined for the given map object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMapElement.name">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLMapElement.areas">
<summary>
 Retrieves a collection of the area objects defined for the given map object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLinkElement.type(System.String)">
<summary>
 Sets or retrieves the content type of the resource designated by the value attribute.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLinkElement.target(System.String)">
<summary>
 Sets or retrieves the window or frame at which to target content.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLinkElement.rev(System.String)">
<summary>
 Sets or retrieves the relationship between the object and the destination of the link.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLinkElement.media(System.String)">
<summary>
 Sets or retrieves the media type.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLinkElement.hreflang(System.String)">
<summary>
 Sets or retrieves the language code of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLinkElement.charset(System.String)">
<summary>
 Sets or retrieves the character set used to encode the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLinkElement.type">
<summary>
 Sets or retrieves the content type of the resource designated by the value attribute.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLinkElement.target">
<summary>
 Sets or retrieves the window or frame at which to target content.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLinkElement.rev">
<summary>
 Sets or retrieves the relationship between the object and the destination of the link.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLinkElement.media">
<summary>
 Sets or retrieves the media type.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLinkElement.hreflang">
<summary>
 Sets or retrieves the language code of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLinkElement.charset">
<summary>
 Sets or retrieves the character set used to encode the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLegendElement.align(System.String)">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLegendElement.align">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLabelElement.htmlFor(System.String)">
<summary>
 Sets or retrieves the object to which the given label object is assigned.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLabelElement.htmlFor">
<summary>
 Sets or retrieves the object to which the given label object is assigned.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLIElement.value(System.Double)">
<summary>
 Sets or retrieves the value which is returned to the server when the form control is submitted.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLIElement.type(System.String)">
<summary>
 Sets or retrieves the MIME type of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLIElement.value">
<summary>
 Sets or retrieves the value which is returned to the server when the form control is submitted.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLLIElement.type">
<summary>
 Sets or retrieves the MIME type of the object.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLInputElement.stepUp(Microsoft.FSharp.Core.FSharpOption{System.Double})">
 <summary>Increments a range input control's value by the value given by the Step attribute. If the optional parameter is used, will increment the input control's value by that value.</summary>
 <param name="n">Value to increment the value by.</param>
</member>
<member name="M:Fable.Import.Browser.HTMLInputElement.stepDown(Microsoft.FSharp.Core.FSharpOption{System.Double})">
 <summary>Decrements a range input control's value by the value given by the Step attribute. If the optional parameter is used, it will decrement the input control's step value multiplied by the parameter's value.</summary>
 <param name="n">Value to decrement the value by.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.willValidate(System.Boolean)">
<summary>
 Returns whether an element will successfully validate based on forms validation rules and constraints.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.width(System.String)">
<summary>
 Sets or gets a value that you can use to implement your own width functionality for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.valueAsNumber(System.Double)">
<summary>
 Returns the input field value as a number.
 Sets or retrieves the value which is returned to the server when the form control is submitted.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.valueAsDate(System.DateTime)">
<summary>
 Sets or retrieves the value of a list item.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.value(System.String)">
<summary>
 Returns the value of the data at the cursor&apos;s current position.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.validity(Fable.Import.Browser.ValidityState)">
<summary>
 Returns a  ValidityState object that represents the validity states of an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.validationMessage(System.String)">
<summary>
 Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as &quot;this is a required field&quot;. The result is that the user sees validation messages without actually submitting.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.useMap(System.String)">
<summary>
 Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.type(System.String)">
<summary>
 Sets or retrieves the MIME type of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.step(System.String)">
<summary>
 Defines an increment or jump between values that you want to allow the user to enter. When used with the max and min attributes, lets you control the range and increment (for example, allow only even numbers) that the user can enter into an input field.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.src(System.String)">
<summary>
 The address or URL of the a media resource that is to be considered.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.size(System.Double)">
<summary>
 Sets or retrieves the number of rows in the list box.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.selectionStart(System.Double)">
<summary>
 Gets or sets the starting position or offset of a text selection.
 Highlights the input area of a form element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.selectionEnd(System.Double)">
<summary>
 Gets or sets the end position or offset of a text selection.
 Makes the selection equal to the current object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.required(System.Boolean)">
<summary>
 When present, marks an element that can&apos;t be submitted without a value.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.readOnly(System.Boolean)">
<summary>
 Sets or retrieves the value indicated whether the content of the object is read-only.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.placeholder(System.String)">
<summary>
 Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.pattern(System.String)">
<summary>
 Gets or sets a string containing a regular expression that the user&apos;s input must match.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.name(System.String)">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.multiple(System.Boolean)">
<summary>
 Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.min(System.String)">
<summary>
 Defines the minimum acceptable value for an input element with type=&quot;number&quot;. When used with the max and step attributes, lets you control the range and increment (such as even numbers only) that the user can enter into an input field.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.maxLength(System.Double)">
<summary>
 Sets or retrieves the maximum number of characters that the user can enter in a text control.
 Defines the maximum, or &quot;done&quot; value for a progress element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.max(System.String)">
<summary>
 Defines the maximum acceptable value for an input element with type=&quot;number&quot;.When used with the min and step attributes, lets you control the range and increment (such as only even numbers) that the user can enter into an input field.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.list(Fable.Import.Browser.HTMLElement)">
<summary>
 Specifies the ID of a pre-defined datalist of options for an input element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.height(System.String)">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.formTarget(System.String)">
<summary>
 Overrides the target attribute on a form element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.formNoValidate(System.String)">
<summary>
 Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a &quot;save draft&quot;-type submit option.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.formMethod(System.String)">
<summary>
 Overrides the submit method attribute previously specified on a form element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.formEnctype(System.String)">
<summary>
 Used to override the encoding (formEnctype attribute) specified on the form element.
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.formAction(System.String)">
<summary>
 Overrides the action attribute (where the data on a form is sent) on the parent form element.
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.form(Fable.Import.Browser.HTMLFormElement)">
<summary>
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.files(Fable.Import.Browser.FileList)">
<summary>
 Returns a FileList object on a file type input object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.defaultValue(System.String)">
<summary>
 Sets or retrieves the initial contents of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.defaultChecked(System.Boolean)">
<summary>
 Sets or retrieves the state of the check box or radio button.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.complete(System.Boolean)">
<summary>
 Retrieves whether the object is fully loaded.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.checked(System.Boolean)">
<summary>
 Sets or retrieves the state of the check box or radio button.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.autofocus(System.Boolean)">
<summary>
 Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.autocomplete(System.String)">
<summary>
 Specifies whether autocomplete is applied to an editable text field.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.alt(System.String)">
<summary>
 Sets or retrieves a text alternative to the graphic.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.align(System.String)">
<summary>
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLInputElement.setSelectionRange(System.Double,System.Double)">
 <summary>Sets the start and end positions of a selection in a text field.</summary>
 <param name="start">The offset into the text field for the start of the selection.</param>
 <param name="end">The offset into the text field for the end of the selection.</param>
</member>
<member name="M:Fable.Import.Browser.HTMLInputElement.setCustomValidity(System.String)">
 <summary>Sets a custom error message that is displayed when a form is submitted.</summary>
 <param name="error">Sets a custom error message that is displayed when a form is submitted.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.willValidate">
<summary>
 Returns whether an element will successfully validate based on forms validation rules and constraints.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.width">
<summary>
 Sets or gets a value that you can use to implement your own width functionality for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.valueAsNumber">
<summary>
 Returns the input field value as a number.
 Sets or retrieves the value which is returned to the server when the form control is submitted.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.valueAsDate">
<summary>
 Sets or retrieves the value of a list item.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.value">
<summary>
 Returns the value of the data at the cursor&apos;s current position.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.validity">
<summary>
 Returns a  ValidityState object that represents the validity states of an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.validationMessage">
<summary>
 Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as &quot;this is a required field&quot;. The result is that the user sees validation messages without actually submitting.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.useMap">
<summary>
 Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.type">
<summary>
 Sets or retrieves the MIME type of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.step">
<summary>
 Defines an increment or jump between values that you want to allow the user to enter. When used with the max and min attributes, lets you control the range and increment (for example, allow only even numbers) that the user can enter into an input field.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.src">
<summary>
 The address or URL of the a media resource that is to be considered.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.size">
<summary>
 Sets or retrieves the number of rows in the list box.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.selectionStart">
<summary>
 Gets or sets the starting position or offset of a text selection.
 Highlights the input area of a form element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.selectionEnd">
<summary>
 Gets or sets the end position or offset of a text selection.
 Makes the selection equal to the current object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.required">
<summary>
 When present, marks an element that can&apos;t be submitted without a value.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.readOnly">
<summary>
 Sets or retrieves the value indicated whether the content of the object is read-only.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.placeholder">
<summary>
 Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.pattern">
<summary>
 Gets or sets a string containing a regular expression that the user&apos;s input must match.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.name">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.multiple">
<summary>
 Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.min">
<summary>
 Defines the minimum acceptable value for an input element with type=&quot;number&quot;. When used with the max and step attributes, lets you control the range and increment (such as even numbers only) that the user can enter into an input field.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.maxLength">
<summary>
 Sets or retrieves the maximum number of characters that the user can enter in a text control.
 Defines the maximum, or &quot;done&quot; value for a progress element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.max">
<summary>
 Defines the maximum acceptable value for an input element with type=&quot;number&quot;.When used with the min and step attributes, lets you control the range and increment (such as only even numbers) that the user can enter into an input field.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.list">
<summary>
 Specifies the ID of a pre-defined datalist of options for an input element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.height">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.formTarget">
<summary>
 Overrides the target attribute on a form element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.formNoValidate">
<summary>
 Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a &quot;save draft&quot;-type submit option.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.formMethod">
<summary>
 Overrides the submit method attribute previously specified on a form element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.formEnctype">
<summary>
 Used to override the encoding (formEnctype attribute) specified on the form element.
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.formAction">
<summary>
 Overrides the action attribute (where the data on a form is sent) on the parent form element.
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.form">
<summary>
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.files">
<summary>
 Returns a FileList object on a file type input object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.defaultValue">
<summary>
 Sets or retrieves the initial contents of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.defaultChecked">
<summary>
 Sets or retrieves the state of the check box or radio button.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.complete">
<summary>
 Retrieves whether the object is fully loaded.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.checked">
<summary>
 Sets or retrieves the state of the check box or radio button.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.autofocus">
<summary>
 Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.autocomplete">
<summary>
 Specifies whether autocomplete is applied to an editable text field.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.alt">
<summary>
 Sets or retrieves a text alternative to the graphic.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLInputElement.align">
<summary>
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLInputElement.checkValidity">
<summary>
 Returns whether a form will validate when it is submitted, without having to submit it.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.width(System.Double)">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.vspace(System.Double)">
<summary>
 Sets or retrieves the vertical margin for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.useMap(System.String)">
<summary>
 Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.srcset(System.String)">
<summary>
 The address or URL of the a media resource that is to be considered.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.src(System.String)">
<summary>
 The address or URL of the a media resource that is to be considered.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.naturalWidth(System.Double)">
<summary>
 The original width of the image resource before sizing.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.naturalHeight(System.Double)">
<summary>
 The original height of the image resource before sizing.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.name(System.String)">
<summary>
 Sets or retrieves the name of an input parameter for an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.msPlayToSource(System.Object)">
<summary>
 Gets the source associated with the media element for use by the PlayToManager.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.msPlayToPrimary(System.Boolean)">
<summary>
 Gets or sets the primary DLNA PlayTo device.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.msPlayToPreferredSourceUri(System.String)">
<summary>
 Gets or sets the path to the preferred media source. This enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.msPlayToDisabled(System.Boolean)">
<summary>
 Gets or sets whether the DLNA PlayTo device is available.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.longDesc(System.String)">
<summary>
 Sets or retrieves a Uniform Resource Identifier (URI) to a long description of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.isMap(System.Boolean)">
<summary>
 Sets or retrieves whether the image is a server-side image map.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.hspace(System.Double)">
<summary>
 Sets or retrieves the width of the border to draw around the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.height(System.Double)">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.currentSrc(System.String)">
<summary>
 Gets the address or URL of the current media resource that is selected by IHTMLMediaElement.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.complete(System.Boolean)">
<summary>
 Retrieves whether the object is fully loaded.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.alt(System.String)">
<summary>
 Sets or retrieves a text alternative to the graphic.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.align(System.String)">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.width">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.vspace">
<summary>
 Sets or retrieves the vertical margin for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.useMap">
<summary>
 Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.srcset">
<summary>
 The address or URL of the a media resource that is to be considered.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.src">
<summary>
 The address or URL of the a media resource that is to be considered.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.naturalWidth">
<summary>
 The original width of the image resource before sizing.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.naturalHeight">
<summary>
 The original height of the image resource before sizing.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.name">
<summary>
 Sets or retrieves the name of an input parameter for an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.msPlayToSource">
<summary>
 Gets the source associated with the media element for use by the PlayToManager.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.msPlayToPrimary">
<summary>
 Gets or sets the primary DLNA PlayTo device.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.msPlayToPreferredSourceUri">
<summary>
 Gets or sets the path to the preferred media source. This enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.msPlayToDisabled">
<summary>
 Gets or sets whether the DLNA PlayTo device is available.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.longDesc">
<summary>
 Sets or retrieves a Uniform Resource Identifier (URI) to a long description of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.isMap">
<summary>
 Sets or retrieves whether the image is a server-side image map.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.hspace">
<summary>
 Sets or retrieves the width of the border to draw around the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.height">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.currentSrc">
<summary>
 Gets the address or URL of the current media resource that is selected by IHTMLMediaElement.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.complete">
<summary>
 Retrieves whether the object is fully loaded.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.alt">
<summary>
 Sets or retrieves a text alternative to the graphic.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLImageElement.align">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.width(System.String)">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.vspace(System.Double)">
<summary>
 Sets or retrieves the vertical margin for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.src(System.String)">
<summary>
 Sets or retrieves a URL to be loaded by the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.scrolling(System.String)">
<summary>
 Sets or retrieves whether the frame can be scrolled.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.noResize(System.Boolean)">
<summary>
 Sets or retrieves whether the user can resize the frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.name(System.String)">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.marginWidth(System.String)">
<summary>
 Sets or retrieves the left and right margin widths before displaying the text in a frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.marginHeight(System.String)">
<summary>
 Sets or retrieves the top and bottom margin heights before displaying the text in a frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.longDesc(System.String)">
<summary>
 Sets or retrieves a URI to a long description of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.hspace(System.Double)">
<summary>
 Sets or retrieves the width of the border to draw around the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.height(System.String)">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.frameSpacing(System.Object)">
<summary>
 Sets or retrieves the amount of additional space between the frames.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.frameBorder(System.String)">
<summary>
 Sets or retrieves whether to display a border for the frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.contentWindow(Fable.Import.Browser.Window)">
<summary>
 Retrieves the object of the specified.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.contentDocument(Fable.Import.Browser.Document)">
<summary>
 Retrieves the document object of the page or frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.align(System.String)">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.width">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.vspace">
<summary>
 Sets or retrieves the vertical margin for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.src">
<summary>
 Sets or retrieves a URL to be loaded by the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.scrolling">
<summary>
 Sets or retrieves whether the frame can be scrolled.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.noResize">
<summary>
 Sets or retrieves whether the user can resize the frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.name">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.marginWidth">
<summary>
 Sets or retrieves the left and right margin widths before displaying the text in a frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.marginHeight">
<summary>
 Sets or retrieves the top and bottom margin heights before displaying the text in a frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.longDesc">
<summary>
 Sets or retrieves a URI to a long description of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.hspace">
<summary>
 Sets or retrieves the width of the border to draw around the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.height">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.frameSpacing">
<summary>
 Sets or retrieves the amount of additional space between the frames.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.frameBorder">
<summary>
 Sets or retrieves whether to display a border for the frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.contentWindow">
<summary>
 Retrieves the object of the specified.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.contentDocument">
<summary>
 Retrieves the document object of the page or frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLIFrameElement.align">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLHtmlElement.version(System.String)">
<summary>
 Sets or retrieves the DTD version that governs the current document.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLHtmlElement.version">
<summary>
 Sets or retrieves the DTD version that governs the current document.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLHeadingElement.align(System.String)">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLHeadingElement.align">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLHRElement.width(System.Double)">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLHRElement.noShade(System.Boolean)">
<summary>
 Sets or retrieves whether the horizontal rule is drawn with 3-D shading.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLHRElement.align(System.String)">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLHRElement.width">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLHRElement.noShade">
<summary>
 Sets or retrieves whether the horizontal rule is drawn with 3-D shading.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLHRElement.align">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameSetElement.rows(System.String)">
<summary>
 Sets or retrieves the frame heights of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameSetElement.name(System.String)">
<summary>
 Sets or retrieves the value specified in the content attribute of the meta object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameSetElement.frameSpacing(System.Object)">
<summary>
 Sets or retrieves the amount of additional space between the frames.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameSetElement.frameBorder(System.String)">
<summary>
 Sets or retrieves whether to display a border for the frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameSetElement.cols(System.String)">
<summary>
 Sets or retrieves the frame widths of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameSetElement.borderColor(System.Object)">
<summary>
 Sets or retrieves the border color of the object.
 Sets or retrieves the width of the border to draw around the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameSetElement.border(System.String)">
<summary>
 Sets or retrieves the width of the border to draw around the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameSetElement.rows">
<summary>
 Sets or retrieves the frame heights of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameSetElement.name">
<summary>
 Sets or retrieves the value specified in the content attribute of the meta object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameSetElement.frameSpacing">
<summary>
 Sets or retrieves the amount of additional space between the frames.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameSetElement.frameBorder">
<summary>
 Sets or retrieves whether to display a border for the frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameSetElement.cols">
<summary>
 Sets or retrieves the frame widths of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameSetElement.borderColor">
<summary>
 Sets or retrieves the border color of the object.
 Sets or retrieves the width of the border to draw around the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameSetElement.border">
<summary>
 Sets or retrieves the width of the border to draw around the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.width(Fable.Core.U2{System.String,System.Double})">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.src(System.String)">
<summary>
 Sets or retrieves a URL to be loaded by the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.scrolling(System.String)">
<summary>
 Sets or retrieves whether the frame can be scrolled.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.noResize(System.Boolean)">
<summary>
 Sets or retrieves whether the user can resize the frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.name(System.String)">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.marginWidth(System.String)">
<summary>
 Sets or retrieves the left and right margin widths before displaying the text in a frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.marginHeight(System.String)">
<summary>
 Sets or retrieves the top and bottom margin heights before displaying the text in a frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.longDesc(System.String)">
<summary>
 Sets or retrieves a URI to a long description of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.height(Fable.Core.U2{System.String,System.Double})">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.frameSpacing(System.Object)">
<summary>
 Sets or retrieves the amount of additional space between the frames.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.frameBorder(System.String)">
<summary>
 Sets or retrieves whether to display a border for the frame.
 Sets or retrieves the way the border frame around the table is displayed.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.contentWindow(Fable.Import.Browser.Window)">
<summary>
 Retrieves the object of the specified.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.contentDocument(Fable.Import.Browser.Document)">
<summary>
 Retrieves the document object of the page or frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.borderColor(System.Object)">
<summary>
 Sets or retrieves the border color of the object.
 Specifies the properties of a border drawn around an object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.border(System.String)">
<summary>
 Specifies the properties of a border drawn around an object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.width">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.src">
<summary>
 Sets or retrieves a URL to be loaded by the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.scrolling">
<summary>
 Sets or retrieves whether the frame can be scrolled.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.noResize">
<summary>
 Sets or retrieves whether the user can resize the frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.name">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.marginWidth">
<summary>
 Sets or retrieves the left and right margin widths before displaying the text in a frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.marginHeight">
<summary>
 Sets or retrieves the top and bottom margin heights before displaying the text in a frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.longDesc">
<summary>
 Sets or retrieves a URI to a long description of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.height">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.frameSpacing">
<summary>
 Sets or retrieves the amount of additional space between the frames.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.frameBorder">
<summary>
 Sets or retrieves whether to display a border for the frame.
 Sets or retrieves the way the border frame around the table is displayed.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.contentWindow">
<summary>
 Retrieves the object of the specified.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.contentDocument">
<summary>
 Retrieves the document object of the page or frame.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.borderColor">
<summary>
 Sets or retrieves the border color of the object.
 Specifies the properties of a border drawn around an object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFrameElement.border">
<summary>
 Specifies the properties of a border drawn around an object.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLFormElement.submit">
<summary>
 Fires when a FORM is about to be submitted.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.target(System.String)">
<summary>
 Sets or retrieves the window or frame at which to target content.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.noValidate(System.Boolean)">
<summary>
 Designates a form that is not validated when submitted.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.name(System.String)">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.method(System.String)">
<summary>
 Sets or retrieves how to send the form data to the server.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.length(System.Double)">
<summary>
 Sets or retrieves the number of objects in a collection.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.enctype(System.String)">
<summary>
 Sets or retrieves the encoding type for the form.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.encoding(System.String)">
<summary>
 Sets or retrieves the MIME encoding for the form.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.elements(Fable.Import.Browser.HTMLCollection)">
<summary>
 Retrieves a collection, in source order, of all controls in a given form.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.autocomplete(System.String)">
<summary>
 Specifies whether autocomplete is applied to an editable text field.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.action(System.String)">
<summary>
 Sets or retrieves the URL to which the form content is sent for processing.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.acceptCharset(System.String)">
<summary>
 Sets or retrieves a list of character encodings for input data that must be accepted by the server processing the form.
 Sets or retrieves a comma-separated list of content types.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLFormElement.reset">
<summary>
 Fires when the user resets a form.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLFormElement.namedItem(System.String)">
<summary>
 Sets or retrieves the name of the object.
 Retrieves a select object or an object from an options collection.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLFormElement.item(Microsoft.FSharp.Core.FSharpOption{System.Object},Microsoft.FSharp.Core.FSharpOption{System.Object})">
 <summary>Retrieves a form object or an object from an elements collection.</summary>
 <param name="name">Variant of type Number or String that specifies the object or collection to retrieve. If this parameter is a Number, it is the zero-based index of the object. If this parameter is a string, all objects with matching name or id properties are retrieved, and a collection is returned if more than one match is made.</param>
 <param name="index">Variant of type Number that specifies the zero-based index of the object to retrieve when a collection is returned.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.target">
<summary>
 Sets or retrieves the window or frame at which to target content.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.noValidate">
<summary>
 Designates a form that is not validated when submitted.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.name">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.method">
<summary>
 Sets or retrieves how to send the form data to the server.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.length">
<summary>
 Sets or retrieves the number of objects in a collection.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.enctype">
<summary>
 Sets or retrieves the encoding type for the form.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.encoding">
<summary>
 Sets or retrieves the MIME encoding for the form.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.elements">
<summary>
 Retrieves a collection, in source order, of all controls in a given form.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.autocomplete">
<summary>
 Specifies whether autocomplete is applied to an editable text field.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.action">
<summary>
 Sets or retrieves the URL to which the form content is sent for processing.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFormElement.acceptCharset">
<summary>
 Sets or retrieves a list of character encodings for input data that must be accepted by the server processing the form.
 Sets or retrieves a comma-separated list of content types.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLFormElement.checkValidity">
<summary>
 Returns whether a form will validate when it is submitted, without having to submit it.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFontElement.face(System.String)">
<summary>
 Sets or retrieves the current typeface family.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFontElement.face">
<summary>
 Sets or retrieves the current typeface family.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFieldSetElement.willValidate(System.Boolean)">
<summary>
 Returns whether an element will successfully validate based on forms validation rules and constraints.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFieldSetElement.validity(Fable.Import.Browser.ValidityState)">
<summary>
 Returns a  ValidityState object that represents the validity states of an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFieldSetElement.validationMessage(System.String)">
<summary>
 Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as &quot;this is a required field&quot;. The result is that the user sees validation messages without actually submitting.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFieldSetElement.form(Fable.Import.Browser.HTMLFormElement)">
<summary>
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFieldSetElement.align(System.String)">
<summary>
 Sets or retrieves a value that indicates the table alignment.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLFieldSetElement.setCustomValidity(System.String)">
 <param name="error">Sets a custom error message that is displayed when a form is submitted.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLFieldSetElement.willValidate">
<summary>
 Returns whether an element will successfully validate based on forms validation rules and constraints.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFieldSetElement.validity">
<summary>
 Returns a  ValidityState object that represents the validity states of an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFieldSetElement.validationMessage">
<summary>
 Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as &quot;this is a required field&quot;. The result is that the user sees validation messages without actually submitting.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFieldSetElement.form">
<summary>
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLFieldSetElement.align">
<summary>
 Sets or retrieves a value that indicates the table alignment.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLFieldSetElement.checkValidity">
<summary>
 Returns whether a form will validate when it is submitted, without having to submit it.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.width(System.String)">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.units(System.String)">
<summary>
 Sets or retrieves the height and width units of the embed object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.src(System.String)">
<summary>
 Sets or retrieves a URL to be loaded by the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.pluginspage(System.String)">
<summary>
 Retrieves the URL of the plug-in used to view an embedded document.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.palette(System.String)">
<summary>
 Retrieves the palette used for the embedded document.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.name(System.String)">
<summary>
 Sets or retrieves the frame name.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.msPlayToSource(System.Object)">
<summary>
 Gets the source associated with the media element for use by the PlayToManager.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.msPlayToPrimary(System.Boolean)">
<summary>
 Gets or sets the primary DLNA PlayTo device.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.msPlayToPreferredSourceUri(System.String)">
<summary>
 Gets or sets the path to the preferred media source. This enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.msPlayToDisabled(System.Boolean)">
<summary>
 Gets or sets whether the DLNA PlayTo device is available.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.height(System.String)">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.width">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.units">
<summary>
 Sets or retrieves the height and width units of the embed object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.src">
<summary>
 Sets or retrieves a URL to be loaded by the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.pluginspage">
<summary>
 Retrieves the URL of the plug-in used to view an embedded document.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.palette">
<summary>
 Retrieves the palette used for the embedded document.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.name">
<summary>
 Sets or retrieves the frame name.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.msPlayToSource">
<summary>
 Gets the source associated with the media element for use by the PlayToManager.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.msPlayToPrimary">
<summary>
 Gets or sets the primary DLNA PlayTo device.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.msPlayToPreferredSourceUri">
<summary>
 Gets or sets the path to the preferred media source. This enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.msPlayToDisabled">
<summary>
 Gets or sets whether the DLNA PlayTo device is available.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLEmbedElement.height">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLElement.dataset(Fable.Import.Browser.DOMStringMap)">
<summary>
 Sets or retrieves the URL that references the data of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLElement.dataset">
<summary>
 Sets or retrieves the URL that references the data of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLDivElement.align(System.String)">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLDivElement.align">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLDDElement.noWrap(System.Boolean)">
<summary>
 Sets or retrieves whether the browser automatically performs wordwrap.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLDDElement.noWrap">
<summary>
 Sets or retrieves whether the browser automatically performs wordwrap.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLCollection.length(System.Double)">
<summary>
 Sets or retrieves the number of objects in a collection.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLCollection.namedItem(System.String)">
<summary>
 Retrieves a form object or an object from an elements collection.
 Sets or retrieves the frame name.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLCollection.item(Microsoft.FSharp.Core.FSharpOption{System.Object},Microsoft.FSharp.Core.FSharpOption{System.Object})">
<summary>
 Retrieves an object from various collections.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLCollection.length">
<summary>
 Sets or retrieves the number of objects in a collection.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLCanvasElement.toDataURL(Microsoft.FSharp.Core.FSharpOption{System.String},System.Object[])">
 <summary>Returns the content of the current canvas as an image that you can use as a source for another canvas or an HTML element.</summary>
 <param name="type">The standard MIME type for the image format to return. If you do not specify this parameter, the default value is a PNG format image.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLCanvasElement.width(System.Double)">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLCanvasElement.height(System.Double)">
<summary>
 Gets or sets the height of a canvas element on a document.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLCanvasElement.msToBlob">
<summary>
 Returns a blob object encoded as a Portable Network Graphics (PNG) format from a canvas image or drawing.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLCanvasElement.width">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLCanvasElement.height">
<summary>
 Gets or sets the height of a canvas element on a document.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLCanvasElement.getContext(System.String,System.Object[])">
<summary>
 Returns an object that provides methods and properties for drawing and manipulating images and graphics on a canvas element in a document. A context object includes information about colors, line widths, fonts, and other graphic parameters that can be drawn on a canvas.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.willValidate(System.Boolean)">
<summary>
 Returns whether an element will successfully validate based on forms validation rules and constraints.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.value(System.String)">
<summary>
 Sets or retrieves the default or selected value of the control.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.validity(Fable.Import.Browser.ValidityState)">
<summary>
 Returns a  ValidityState object that represents the validity states of an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.validationMessage(System.String)">
<summary>
 Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as &quot;this is a required field&quot;. The result is that the user sees validation messages without actually submitting.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.type(System.String)">
<summary>
 Returns the content type of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.status(System.Object)">
<summary>
 Sets or retrieves the value indicating whether the control is selected.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.name(System.String)">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.formTarget(System.String)">
<summary>
 Overrides the target attribute on a form element.
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.formNoValidate(System.String)">
<summary>
 Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a &quot;save draft&quot;-type submit option.
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.formMethod(System.String)">
<summary>
 Overrides the submit method attribute previously specified on a form element.
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.formEnctype(System.String)">
<summary>
 Used to override the encoding (formEnctype attribute) specified on the form element.
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.formAction(System.String)">
<summary>
 Overrides the action attribute (where the data on a form is sent) on the parent form element.
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.form(Fable.Import.Browser.HTMLFormElement)">
<summary>
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.autofocus(System.Boolean)">
<summary>
 Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLButtonElement.setCustomValidity(System.String)">
 <summary>Sets a custom error message that is displayed when a form is submitted.</summary>
 <param name="error">Sets a custom error message that is displayed when a form is submitted.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.willValidate">
<summary>
 Returns whether an element will successfully validate based on forms validation rules and constraints.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.value">
<summary>
 Sets or retrieves the default or selected value of the control.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.validity">
<summary>
 Returns a  ValidityState object that represents the validity states of an element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.validationMessage">
<summary>
 Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as &quot;this is a required field&quot;. The result is that the user sees validation messages without actually submitting.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.type">
<summary>
 Returns the content type of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.status">
<summary>
 Sets or retrieves the value indicating whether the control is selected.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.name">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.formTarget">
<summary>
 Overrides the target attribute on a form element.
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.formNoValidate">
<summary>
 Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a &quot;save draft&quot;-type submit option.
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.formMethod">
<summary>
 Overrides the submit method attribute previously specified on a form element.
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.formEnctype">
<summary>
 Used to override the encoding (formEnctype attribute) specified on the form element.
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.formAction">
<summary>
 Overrides the action attribute (where the data on a form is sent) on the parent form element.
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.form">
<summary>
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLButtonElement.autofocus">
<summary>
 Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLButtonElement.checkValidity">
<summary>
 Returns whether a form will validate when it is submitted, without having to submit it.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBodyElement.text(System.Object)">
<summary>
 Sets or retrieves the text string specified by the option tag.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBodyElement.noWrap(System.Boolean)">
<summary>
 Sets or retrieves whether the browser automatically performs wordwrap.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBodyElement.text">
<summary>
 Sets or retrieves the text string specified by the option tag.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBodyElement.noWrap">
<summary>
 Sets or retrieves whether the browser automatically performs wordwrap.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLBodyElement.addEventListener_MSContentZoom``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.UIEvent,``0},Microsoft.FSharp.Core.FSharpOption{System.Boolean})">
 <param name="before">Variant of type Object that specifies an element to insert before, or null to append the object to the collection.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLBlockElement.width(System.Double)">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBlockElement.cite(System.String)">
<summary>
 Sets or retrieves reference information about the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBlockElement.width">
<summary>
 Sets or retrieves the width of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBlockElement.cite">
<summary>
 Sets or retrieves reference information about the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBaseFontElement.size(System.Double)">
<summary>
 Sets or retrieves the font size of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBaseFontElement.face(System.String)">
<summary>
 Sets or retrieves the current typeface family.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBaseFontElement.size">
<summary>
 Sets or retrieves the font size of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBaseFontElement.face">
<summary>
 Sets or retrieves the current typeface family.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLBaseFontElement.addEventListener(System.String,Fable.Core.U2{Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,Microsoft.FSharp.Core.Unit},Fable.Import.Browser.EventListenerObject},Microsoft.FSharp.Core.FSharpOption{System.Boolean})">
 <param name="element">Variant of type Number that specifies the index position in the collection where the element is placed. If no value is given, the method places the element at the end of the collection.</param>
 <param name="before">Variant of type Object that specifies an element to insert before, or null to append the object to the collection.</param>
</member>
<member name="P:Fable.Import.Browser.HTMLBaseElement.target(System.String)">
<summary>
 Sets or retrieves the window or frame at which to target content.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBaseElement.href(System.String)">
<summary>
 Sets or retrieves a destination URL or an anchor point.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBaseElement.target">
<summary>
 Sets or retrieves the window or frame at which to target content.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBaseElement.href">
<summary>
 Sets or retrieves a destination URL or an anchor point.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBRElement.clear(System.String)">
<summary>
 Sets or retrieves the side on which floating objects are not to be positioned when any IHTMLBlockElement is inserted into the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLBRElement.clear">
<summary>
 Sets or retrieves the side on which floating objects are not to be positioned when any IHTMLBlockElement is inserted into the document.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLAreasCollection.remove(Microsoft.FSharp.Core.FSharpOption{System.Double})">
 <summary>Removes an element from the collection.</summary>
 <param name="index">Number that specifies the zero-based index of the element to remove from the collection.</param>
</member>
<member name="M:Fable.Import.Browser.HTMLAreasCollection.add(Fable.Import.Browser.HTMLElement,Microsoft.FSharp.Core.FSharpOption{Fable.Core.U2{Fable.Import.Browser.HTMLElement,System.Double}})">
 <summary>Adds an element to the areas, controlRange, or options collection.</summary>
 <param name="element">Variant of type Number that specifies the index position in the collection where the element is placed. If no value is given, the method places the element at the end of the collection.</param>
 <param name="before">Variant of type Object that specifies an element to insert before, or null to append the object to the collection.</param>
</member>
<member name="M:Fable.Import.Browser.HTMLAreaElement.toString">
<summary>
 Returns a string representation of an object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.target(System.String)">
<summary>
 Sets or retrieves the window or frame at which to target content.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.shape(System.String)">
<summary>
 Sets or retrieves the shape of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.search(System.String)">
<summary>
 Sets or retrieves the substring of the href property that follows the question mark.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.rel(System.String)">
<summary>
 Sets or retrieves the relationship between the object and the destination of the link.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.port(System.String)">
<summary>
 Sets or retrieves the port number associated with a URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.pathname(System.String)">
<summary>
 Sets or retrieves the file name or path specified by the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.noHref(System.Boolean)">
<summary>
 Sets or gets whether clicks in this region cause action.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.href(System.String)">
<summary>
 Gets or sets the baseline URL on which relative links are based.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.hostname(System.String)">
<summary>
 Sets or retrieves the host name part of the location or URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.hash(System.String)">
<summary>
 Sets or retrieves the subsection of the href property that follows the number sign (#).
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.coords(System.String)">
<summary>
 Sets or retrieves the coordinates of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.alt(System.String)">
<summary>
 Sets or retrieves a text alternative to the graphic.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.target">
<summary>
 Sets or retrieves the window or frame at which to target content.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.shape">
<summary>
 Sets or retrieves the shape of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.search">
<summary>
 Sets or retrieves the substring of the href property that follows the question mark.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.rel">
<summary>
 Sets or retrieves the relationship between the object and the destination of the link.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.port">
<summary>
 Sets or retrieves the port number associated with a URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.pathname">
<summary>
 Sets or retrieves the file name or path specified by the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.noHref">
<summary>
 Sets or gets whether clicks in this region cause action.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.href">
<summary>
 Gets or sets the baseline URL on which relative links are based.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.hostname">
<summary>
 Sets or retrieves the host name part of the location or URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.hash">
<summary>
 Sets or retrieves the subsection of the href property that follows the number sign (#).
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.coords">
<summary>
 Sets or retrieves the coordinates of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAreaElement.alt">
<summary>
 Sets or retrieves a text alternative to the graphic.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.width(System.Double)">
<summary>
 Gets or sets the width of a canvas element on a document.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.vspace(System.Double)">
<summary>
 Sets or retrieves the vertical margin for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.useMap(System.String)">
<summary>
 Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.type(System.String)">
<summary>
 Gets the classification and default behavior of the button.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.standby(System.String)">
<summary>
 Sets or retrieves a message to be displayed while an object is loading.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.name(System.String)">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.hspace(System.Double)">
<summary>
 Sets or retrieves the horizontal margin for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.height(System.String)">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.form(Fable.Import.Browser.HTMLFormElement)">
<summary>
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.declare(System.Boolean)">
<summary>
 Sets or retrieves a character string that can be used to implement your own declare functionality for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.data(System.String)">
<summary>
 Sets or retrieves the URL that references the data of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.contentDocument(Fable.Import.Browser.Document)">
<summary>
 Address of a pointer to the document this page or frame contains. If there is no document, then null will be returned.
 Gets or sets meta-information to associate with httpEquiv or name.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.codeType(System.String)">
<summary>
 Sets or retrieves the Internet media type for the code associated with the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.codeBase(System.String)">
<summary>
 Sets or retrieves the URL of the component.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.code(System.String)">
<summary>
 Sets or retrieves the URL of the file containing the compiled Java class.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.border(System.String)">
<summary>
 Specifies the properties of a border drawn around an object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.archive(System.String)">
<summary>
 Sets or retrieves a character string that can be used to implement your own archive functionality for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.altHtml(System.String)">
<summary>
 Gets or sets the optional alternative HTML script to execute if the object fails to load.
 Sets or retrieves a text alternative to the graphic.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.alt(System.String)">
<summary>
 Sets or retrieves a text alternative to the graphic.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.align(System.String)">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.BaseHref(System.String)">
<summary>
 Retrieves a string of the URL where the object tag can be found. This is often the href of the document that the object is in, or the value set by a base element.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.width">
<summary>
 Gets or sets the width of a canvas element on a document.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.vspace">
<summary>
 Sets or retrieves the vertical margin for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.useMap">
<summary>
 Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.type">
<summary>
 Gets the classification and default behavior of the button.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.standby">
<summary>
 Sets or retrieves a message to be displayed while an object is loading.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.name">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.hspace">
<summary>
 Sets or retrieves the horizontal margin for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.height">
<summary>
 Sets or retrieves the height of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.form">
<summary>
 Retrieves a reference to the form that the object is embedded in.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.declare">
<summary>
 Sets or retrieves a character string that can be used to implement your own declare functionality for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.data">
<summary>
 Sets or retrieves the URL that references the data of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.contentDocument">
<summary>
 Address of a pointer to the document this page or frame contains. If there is no document, then null will be returned.
 Gets or sets meta-information to associate with httpEquiv or name.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.codeType">
<summary>
 Sets or retrieves the Internet media type for the code associated with the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.codeBase">
<summary>
 Sets or retrieves the URL of the component.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.code">
<summary>
 Sets or retrieves the URL of the file containing the compiled Java class.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.border">
<summary>
 Specifies the properties of a border drawn around an object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.archive">
<summary>
 Sets or retrieves a character string that can be used to implement your own archive functionality for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.altHtml">
<summary>
 Gets or sets the optional alternative HTML script to execute if the object fails to load.
 Sets or retrieves a text alternative to the graphic.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.alt">
<summary>
 Sets or retrieves a text alternative to the graphic.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.align">
<summary>
 Sets or retrieves how the object is aligned with adjacent text.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAppletElement.BaseHref">
<summary>
 Retrieves a string of the URL where the object tag can be found. This is often the href of the document that the object is in, or the value set by a base element.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLAnchorElement.toString">
<summary>
 Returns a string representation of an object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.type(System.String)">
<summary>
 Returns the content type of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.text(System.String)">
<summary>
 Retrieves or sets the text of the object as a string.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.target(System.String)">
<summary>
 Sets or retrieves the window or frame at which to target content.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.shape(System.String)">
<summary>
 Sets or retrieves the shape of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.search(System.String)">
<summary>
 Sets or retrieves the substring of the href property that follows the question mark.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.rev(System.String)">
<summary>
 Sets or retrieves the relationship between the object and the destination of the link.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.rel(System.String)">
<summary>
 Sets or retrieves the relationship between the object and the destination of the link.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.protocolLong(System.String)">
<summary>
 Sets or retrieves the protocol portion of a URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.protocol(System.String)">
<summary>
 Contains the protocol of the URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.port(System.String)">
<summary>
 Sets or retrieves the port number associated with a URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.pathname(System.String)">
<summary>
 Contains the pathname of the URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.nameProp(System.String)">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.name(System.String)">
<summary>
 Sets or retrieves the shape of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.hreflang(System.String)">
<summary>
 Sets or retrieves the language code of the object.
 Sets or retrieves a destination URL or an anchor point.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.href(System.String)">
<summary>
 Sets or retrieves a destination URL or an anchor point.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.hostname(System.String)">
<summary>
 Contains the hostname of a URL.
 Sets or retrieves the hostname and port number of the location or URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.host(System.String)">
<summary>
 Contains the hostname and port values of the URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.hash(System.String)">
<summary>
 Contains the anchor portion of the URL including the hash sign (#).
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.coords(System.String)">
<summary>
 Sets or retrieves the coordinates of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.charset(System.String)">
<summary>
 Sets or retrieves the character set used to encode the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.type">
<summary>
 Returns the content type of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.text">
<summary>
 Retrieves or sets the text of the object as a string.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.target">
<summary>
 Sets or retrieves the window or frame at which to target content.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.shape">
<summary>
 Sets or retrieves the shape of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.search">
<summary>
 Sets or retrieves the substring of the href property that follows the question mark.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.rev">
<summary>
 Sets or retrieves the relationship between the object and the destination of the link.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.rel">
<summary>
 Sets or retrieves the relationship between the object and the destination of the link.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.protocolLong">
<summary>
 Sets or retrieves the protocol portion of a URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.protocol">
<summary>
 Contains the protocol of the URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.port">
<summary>
 Sets or retrieves the port number associated with a URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.pathname">
<summary>
 Contains the pathname of the URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.nameProp">
<summary>
 Sets or retrieves the name of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.name">
<summary>
 Sets or retrieves the shape of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.hreflang">
<summary>
 Sets or retrieves the language code of the object.
 Sets or retrieves a destination URL or an anchor point.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.href">
<summary>
 Sets or retrieves a destination URL or an anchor point.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.hostname">
<summary>
 Contains the hostname of a URL.
 Sets or retrieves the hostname and port number of the location or URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.host">
<summary>
 Contains the hostname and port values of the URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.hash">
<summary>
 Contains the anchor portion of the URL including the hash sign (#).
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.coords">
<summary>
 Sets or retrieves the coordinates of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.HTMLAnchorElement.charset">
<summary>
 Sets or retrieves the character set used to encode the object.
</summary>
</member>
<member name="M:Fable.Import.Browser.HTMLAllCollection.namedItem(System.String)">
<summary>
 Sets or retrieves the shape of the object.
 Retrieves a select object or an object from an options collection.
</summary>
</member>
<member name="M:Fable.Import.Browser.Document.writeln(System.String[])">
 <summary>Writes one or more HTML expressions, followed by a carriage return, to a document in the specified window.</summary>
 <param name="content">The text and HTML tags to write.</param>
</member>
<member name="M:Fable.Import.Browser.Document.write(System.String[])">
 <summary>Writes one or more HTML expressions to a document in the specified window.</summary>
 <param name="content">Specifies the text and HTML tags to write.</param>
</member>
<member name="M:Fable.Import.Browser.Document.updateSettings">
<summary>
 Allows updating the print settings for the page.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.xmlVersion(System.String)">
<summary>
 Gets or sets the version attribute specified in the declaration of an XML document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.vlinkColor(System.String)">
<summary>
 Sets or gets the color of the links that the user has visited.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.title(System.String)">
<summary>
 Contains the title of the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.styleSheets(Fable.Import.Browser.StyleSheetList)">
<summary>
 Retrieves a collection of styleSheet objects representing the style sheets that correspond to each instance of a link or style object in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.scripts(Fable.Import.Browser.HTMLCollection)">
<summary>
 Retrieves a collection of all script objects in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.rootElement(Fable.Import.Browser.SVGSVGElement)">
<summary>
 Gets the root svg element in the document hierarchy.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.referrer(System.String)">
<summary>
 Gets the URL of the location that referred the user to the current page.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.readyState(System.String)">
<summary>
 Retrieves a value that indicates the current state of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onwaiting``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when playback stops because the next frame of a video resource is not available.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onvolumechange``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when the volume is changed, or playback is muted or unmuted.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ontimeupdate``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs to indicate the current playback position.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onsuspend``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs if the load operation has been intentionally halted.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onstop``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Fires when the user clicks the Stop button or leaves the Web page.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onstalled``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when the download has stopped.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onselect``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.UIEvent,``0})">
<summary>
 Fires when the current selection changes.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onseeking``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when the current playback position is moved.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onseeked``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when the seek operation ends.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onscroll``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.UIEvent,``0})">
<summary>
 Fires when the user repositions the scroll box in the scroll bar on the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onreset``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Fires when the user resets a form.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onreadystatechange``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.ProgressEvent,``0})">
<summary>
 Fires when the state of the object has changed.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onratechange``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when the playback rate is increased or decreased.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onprogress``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.ProgressEvent,``0})">
<summary>
 Occurs to indicate progress while downloading media data.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onplaying``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when the audio or video has started playing.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onplay``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when the play method is requested.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onpause``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when playback is paused.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmsthumbnailclick``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.MSSiteModeEvent,``0})">
<summary>
 Occurs when a user clicks a button in a Thumbnail Toolbar of a webpage running in Site Mode.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmssitemodejumplistitemremoved``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.MSSiteModeEvent,``0})">
<summary>
 Occurs when an item is removed from a Jump List of a webpage running in Site Mode.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmousewheel``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.MouseWheelEvent,``0})">
<summary>
 Fires when the wheel button is rotated.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmouseup``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.MouseEvent,``0})">
<summary>
 Fires when the user releases a mouse button while the mouse is over the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmouseover``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.MouseEvent,``0})">
<summary>
 Fires when the user moves the mouse pointer into the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmouseout``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.MouseEvent,``0})">
<summary>
 Fires when the user moves the mouse pointer outside the boundaries of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmousemove``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.MouseEvent,``0})">
<summary>
 Fires when the user moves the mouse over the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmousedown``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.MouseEvent,``0})">
<summary>
 Fires when the user clicks the object with either mouse button.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onloadstart``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when Internet Explorer begins looking for media data.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onloadedmetadata``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when the duration and dimensions of the media have been determined.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onloadeddata``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when media data is loaded at the current playback position.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onload``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Fires immediately after the browser loads the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onkeyup``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.KeyboardEvent,``0})">
<summary>
 Fires when the user releases a key.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onkeypress``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.KeyboardEvent,``0})">
<summary>
 Fires when the user presses an alphanumeric key.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onkeydown``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.KeyboardEvent,``0})">
<summary>
 Fires when the user presses a key.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onfocus``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.FocusEvent,``0})">
<summary>
 Fires when the object receives focus.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onerror``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Fires when an error occurs during object loading.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onended``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when the end of playback is reached.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onemptied``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when the media element is reset to its initial state.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondurationchange``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when the duration attribute is updated.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondragstart``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.DragEvent,``0})">
<summary>
 Fires on the source object when the user starts to drag a text selection or selected object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondragover``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.DragEvent,``0})">
<summary>
 Fires on the target element continuously while the user drags the object over a valid drop target.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondragleave``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.DragEvent,``0})">
<summary>
 Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondragenter``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.DragEvent,``0})">
<summary>
 Fires on the target element when the user drags the object to a valid drop target.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondragend``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.DragEvent,``0})">
<summary>
 Fires on the source object when the user releases the mouse at the close of a drag operation.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondrag``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.DragEvent,``0})">
<summary>
 Fires on the source object continuously during a drag operation.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondeactivate``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.UIEvent,``0})">
<summary>
 Fires when the activeElement is changed from the current object to another object in the parent document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondblclick``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.MouseEvent,``0})">
<summary>
 Fires when the user double-clicks the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.oncontextmenu``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.PointerEvent,``0})">
<summary>
 Fires when the user clicks the right mouse button in the client area, opening the context menu.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onclick``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.MouseEvent,``0})">
<summary>
 Fires when the user clicks the left mouse button on the object
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onchange``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Fires when the contents of the object or selection have changed.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.oncanplay``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Occurs when playback is possible, but would require further buffering.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onblur``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.FocusEvent,``0})">
<summary>
 Fires when the object loses the input focus.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onbeforedeactivate``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.UIEvent,``0})">
<summary>
 Fires immediately before the activeElement is changed from the current object to another object in the parent document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onbeforeactivate``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.UIEvent,``0})">
<summary>
 Fires immediately before the object is set as the active element.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onactivate``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.UIEvent,``0})">
<summary>
 Fires when the object is set as the active element.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onabort``1(Microsoft.FSharp.Core.FSharpFunc{Fable.Import.Browser.Event,``0})">
<summary>
 Fires when the user aborts the download.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.location(Fable.Import.Browser.Location)">
<summary>
 Contains information about the current URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.links(Fable.Import.Browser.HTMLCollection)">
<summary>
 Retrieves a collection of all a objects that specify the href property and all area objects in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.linkColor(System.String)">
<summary>
 Sets or gets the color of the document links.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.lastModified(System.String)">
<summary>
 Gets the date that the page was last modified, if the page supplies one.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.inputEncoding(System.String)">
<summary>
 Returns the character encoding used to create the webpage that is loaded into the document object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.implementation(Fable.Import.Browser.DOMImplementation)">
<summary>
 Gets the implementation object of the current document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.images(Fable.Import.Browser.HTMLCollection)">
<summary>
 Retrieves a collection, in source order, of img objects in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.forms(Fable.Import.Browser.HTMLCollection)">
<summary>
 Retrieves a collection, in source order, of all form objects in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.fgColor(System.String)">
<summary>
 Sets or gets the foreground (text) color of the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.embeds(Fable.Import.Browser.HTMLCollection)">
<summary>
 Retrieves a collection of all embed objects in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.domain(System.String)">
<summary>
 Sets or gets the security domain of the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.documentElement(Fable.Import.Browser.HTMLElement)">
<summary>
 Gets a reference to the root node of the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.doctype(Fable.Import.Browser.DocumentType)">
<summary>
 Gets an object representing the document type declaration associated with the current document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.dir(System.String)">
<summary>
 Sets or retrieves a value that indicates the reading order of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.designMode(System.String)">
<summary>
 Sets or gets a value that indicates whether the document can be edited.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.compatMode(System.String)">
<summary>
 Gets a value that indicates whether standards-compliant mode is switched on for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.charset(System.String)">
<summary>
 Gets or sets the character set used to encode the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.body(Fable.Import.Browser.HTMLElement)">
<summary>
 Specifies the beginning and end of the document body.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.bgColor(System.String)">
<summary>
 Deprecated. Sets or retrieves a value that indicates the background color behind the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.applets(Fable.Import.Browser.HTMLCollection)">
<summary>
 Retrieves a collection of all applet objects in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.anchors(Fable.Import.Browser.HTMLCollection)">
<summary>
 Retrieves a collection of all a objects that have a name and/or id property. Objects in this collection are in HTML source order.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.all(Fable.Import.Browser.HTMLCollection)">
<summary>
 Returns a reference to the collection of elements contained by the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.alinkColor(System.String)">
<summary>
 Sets or gets the color of all active links in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.activeElement(Fable.Import.Browser.Element)">
<summary>
 Gets the object that has the focus when the parent document has focus.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.URLUnencoded(System.String)">
<summary>
 Gets the URL for the document, stripped of any character encoding.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.URL(System.String)">
<summary>
 Sets or gets the URL for the current document.
</summary>
</member>
<member name="M:Fable.Import.Browser.Document.queryCommandValue(System.String)">
 <summary>Returns the current value of the document, range, or current selection for the given command.</summary>
 <param name="commandId">String that specifies a command identifier.</param>
</member>
<member name="M:Fable.Import.Browser.Document.queryCommandText(System.String)">
 <summary>Retrieves the string associated with a command.</summary>
 <param name="commandId">String that contains the identifier of a command. This can be any command identifier given in the list of Command Identifiers.</param>
</member>
<member name="M:Fable.Import.Browser.Document.queryCommandSupported(System.String)">
 <summary>Returns a Boolean value that indicates whether the current command is supported on the current range.</summary>
 <param name="commandId">Specifies a command identifier.</param>
</member>
<member name="M:Fable.Import.Browser.Document.queryCommandState(System.String)">
 <summary>Returns a Boolean value that indicates the current state of the command.</summary>
 <param name="commandId">String that specifies a command identifier.</param>
</member>
<member name="M:Fable.Import.Browser.Document.queryCommandIndeterm(System.String)">
 <summary>Returns a Boolean value that indicates whether the specified command is in the indeterminate state.</summary>
 <param name="commandId">String that specifies a command identifier.</param>
</member>
<member name="M:Fable.Import.Browser.Document.queryCommandEnabled(System.String)">
 <summary>Returns a Boolean value that indicates whether a specified command can be successfully executed using execCommand, given the current state of the document.</summary>
 <param name="commandId">Specifies a command identifier.</param>
</member>
<member name="M:Fable.Import.Browser.Document.open(Microsoft.FSharp.Core.FSharpOption{System.String},Microsoft.FSharp.Core.FSharpOption{System.String},Microsoft.FSharp.Core.FSharpOption{System.String},Microsoft.FSharp.Core.FSharpOption{System.Boolean})">
 <summary>Opens a new window and loads a document specified by a given URL. Also, opens a new window that uses the url parameter and the name parameter to collect the output of the write method and the writeln method.</summary>
 <param name="url">Specifies a MIME type for the document.</param>
 <param name="name">Specifies the name of the window. This name is used as the value for the TARGET attribute on a form or an anchor element.</param>
 <param name="features">Contains a list of items separated by commas. Each item consists of an option and a value, separated by an equals sign (for example, "fullscreen=yes, toolbar=yes"). The following values are supported.</param>
 <param name="replace">Specifies whether the existing entry for the document is replaced in the history list.</param>
</member>
<member name="M:Fable.Import.Browser.Document.hasFocus">
<summary>
 Gets a value indicating whether the object currently has focus.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.xmlVersion">
<summary>
 Gets or sets the version attribute specified in the declaration of an XML document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.vlinkColor">
<summary>
 Sets or gets the color of the links that the user has visited.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.title">
<summary>
 Contains the title of the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.styleSheets">
<summary>
 Retrieves a collection of styleSheet objects representing the style sheets that correspond to each instance of a link or style object in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.scripts">
<summary>
 Retrieves a collection of all script objects in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.rootElement">
<summary>
 Gets the root svg element in the document hierarchy.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.referrer">
<summary>
 Gets the URL of the location that referred the user to the current page.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.readyState">
<summary>
 Retrieves a value that indicates the current state of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onwaiting``1">
<summary>
 Occurs when playback stops because the next frame of a video resource is not available.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onvolumechange``1">
<summary>
 Occurs when the volume is changed, or playback is muted or unmuted.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ontimeupdate``1">
<summary>
 Occurs to indicate the current playback position.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onsuspend``1">
<summary>
 Occurs if the load operation has been intentionally halted.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onstop``1">
<summary>
 Fires when the user clicks the Stop button or leaves the Web page.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onstalled``1">
<summary>
 Occurs when the download has stopped.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onselect``1">
<summary>
 Fires when the current selection changes.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onseeking``1">
<summary>
 Occurs when the current playback position is moved.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onseeked``1">
<summary>
 Occurs when the seek operation ends.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onscroll``1">
<summary>
 Fires when the user repositions the scroll box in the scroll bar on the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onreset``1">
<summary>
 Fires when the user resets a form.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onreadystatechange``1">
<summary>
 Fires when the state of the object has changed.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onratechange``1">
<summary>
 Occurs when the playback rate is increased or decreased.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onprogress``1">
<summary>
 Occurs to indicate progress while downloading media data.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onplaying``1">
<summary>
 Occurs when the audio or video has started playing.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onplay``1">
<summary>
 Occurs when the play method is requested.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onpause``1">
<summary>
 Occurs when playback is paused.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmsthumbnailclick``1">
<summary>
 Occurs when a user clicks a button in a Thumbnail Toolbar of a webpage running in Site Mode.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmssitemodejumplistitemremoved``1">
<summary>
 Occurs when an item is removed from a Jump List of a webpage running in Site Mode.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmousewheel``1">
<summary>
 Fires when the wheel button is rotated.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmouseup``1">
<summary>
 Fires when the user releases a mouse button while the mouse is over the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmouseover``1">
<summary>
 Fires when the user moves the mouse pointer into the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmouseout``1">
<summary>
 Fires when the user moves the mouse pointer outside the boundaries of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmousemove``1">
<summary>
 Fires when the user moves the mouse over the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onmousedown``1">
<summary>
 Fires when the user clicks the object with either mouse button.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onloadstart``1">
<summary>
 Occurs when Internet Explorer begins looking for media data.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onloadedmetadata``1">
<summary>
 Occurs when the duration and dimensions of the media have been determined.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onloadeddata``1">
<summary>
 Occurs when media data is loaded at the current playback position.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onload``1">
<summary>
 Fires immediately after the browser loads the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onkeyup``1">
<summary>
 Fires when the user releases a key.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onkeypress``1">
<summary>
 Fires when the user presses an alphanumeric key.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onkeydown``1">
<summary>
 Fires when the user presses a key.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onfocus``1">
<summary>
 Fires when the object receives focus.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onerror``1">
<summary>
 Fires when an error occurs during object loading.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onended``1">
<summary>
 Occurs when the end of playback is reached.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onemptied``1">
<summary>
 Occurs when the media element is reset to its initial state.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondurationchange``1">
<summary>
 Occurs when the duration attribute is updated.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondragstart``1">
<summary>
 Fires on the source object when the user starts to drag a text selection or selected object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondragover``1">
<summary>
 Fires on the target element continuously while the user drags the object over a valid drop target.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondragleave``1">
<summary>
 Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondragenter``1">
<summary>
 Fires on the target element when the user drags the object to a valid drop target.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondragend``1">
<summary>
 Fires on the source object when the user releases the mouse at the close of a drag operation.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondrag``1">
<summary>
 Fires on the source object continuously during a drag operation.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondeactivate``1">
<summary>
 Fires when the activeElement is changed from the current object to another object in the parent document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.ondblclick``1">
<summary>
 Fires when the user double-clicks the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.oncontextmenu``1">
<summary>
 Fires when the user clicks the right mouse button in the client area, opening the context menu.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onclick``1">
<summary>
 Fires when the user clicks the left mouse button on the object
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onchange``1">
<summary>
 Fires when the contents of the object or selection have changed.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.oncanplay``1">
<summary>
 Occurs when playback is possible, but would require further buffering.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onblur``1">
<summary>
 Fires when the object loses the input focus.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onbeforedeactivate``1">
<summary>
 Fires immediately before the activeElement is changed from the current object to another object in the parent document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onbeforeactivate``1">
<summary>
 Fires immediately before the object is set as the active element.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onactivate``1">
<summary>
 Fires when the object is set as the active element.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.onabort``1">
<summary>
 Fires when the user aborts the download.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.location">
<summary>
 Contains information about the current URL.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.links">
<summary>
 Retrieves a collection of all a objects that specify the href property and all area objects in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.linkColor">
<summary>
 Sets or gets the color of the document links.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.lastModified">
<summary>
 Gets the date that the page was last modified, if the page supplies one.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.inputEncoding">
<summary>
 Returns the character encoding used to create the webpage that is loaded into the document object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.implementation">
<summary>
 Gets the implementation object of the current document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.images">
<summary>
 Retrieves a collection, in source order, of img objects in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.forms">
<summary>
 Retrieves a collection, in source order, of all form objects in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.fgColor">
<summary>
 Sets or gets the foreground (text) color of the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.embeds">
<summary>
 Retrieves a collection of all embed objects in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.domain">
<summary>
 Sets or gets the security domain of the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.documentElement">
<summary>
 Gets a reference to the root node of the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.doctype">
<summary>
 Gets an object representing the document type declaration associated with the current document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.dir">
<summary>
 Sets or retrieves a value that indicates the reading order of the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.designMode">
<summary>
 Sets or gets a value that indicates whether the document can be edited.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.compatMode">
<summary>
 Gets a value that indicates whether standards-compliant mode is switched on for the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.charset">
<summary>
 Gets or sets the character set used to encode the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.body">
<summary>
 Specifies the beginning and end of the document body.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.bgColor">
<summary>
 Deprecated. Sets or retrieves a value that indicates the background color behind the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.applets">
<summary>
 Retrieves a collection of all applet objects in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.anchors">
<summary>
 Retrieves a collection of all a objects that have a name and/or id property. Objects in this collection are in HTML source order.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.all">
<summary>
 Returns a reference to the collection of elements contained by the object.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.alinkColor">
<summary>
 Sets or gets the color of all active links in the document.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.activeElement">
<summary>
 Gets the object that has the focus when the parent document has focus.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.URLUnencoded">
<summary>
 Gets the URL for the document, stripped of any character encoding.
</summary>
</member>
<member name="P:Fable.Import.Browser.Document.URL">
<summary>
 Sets or gets the URL for the current document.
</summary>
</member>
<member name="M:Fable.Import.Browser.Document.getSelection">
<summary>
 Returns an object representing the current selection of the document that is loaded into the object displaying a webpage.
</summary>
</member>
<member name="M:Fable.Import.Browser.Document.getElementsByTagName_a">
<summary>
 Retrieves a collection of objects based on the specified element name.
</summary>
</member>
<member name="M:Fable.Import.Browser.Document.getElementsByName(System.String)">
 <summary>Gets a collection of objects based on the value of the NAME or ID attribute.</summary>
 <param name="elementName">Gets a collection of objects based on the value of the NAME or ID attribute.</param>
</member>
<member name="M:Fable.Import.Browser.Document.getElementById(System.String)">
 <summary>Returns a reference to the first object with the specified value of the ID or NAME attribute.</summary>
 <param name="elementId">String that specifies the ID value. Case-insensitive.</param>
 <param name="elementId">String that specifies the ID value. Case-insensitive.</param>
</member>
<member name="M:Fable.Import.Browser.Document.focus">
<summary>
 Causes the element to receive the focus and executes the code specified by the onfocus event.
</summary>
</member>
<member name="M:Fable.Import.Browser.Document.execCommandShowHelp(System.String)">
 <summary>Displays help information for the given command identifier.</summary>
 <param name="commandId">Displays help information for the given command identifier.</param>
</member>
<member name="M:Fable.Import.Browser.Document.execCommand(System.String,Microsoft.FSharp.Core.FSharpOption{System.Boolean},Microsoft.FSharp.Core.FSharpOption{System.Object})">
 <summary>Executes a command on the current document, current selection, or the given range.</summary>
 <param name="commandId">String that specifies the command to execute. This command can be any of the command identifiers that can be executed in script.</param>
 <param name="showUI">Display the user interface, defaults to false.</param>
 <param name="value">Value to assign.</param>
</member>
<member name="M:Fable.Import.Browser.Document.elementFromPoint(System.Double,System.Double)">
 <summary>Returns the element for the specified x coordinate and the specified y coordinate.</summary>
 <param name="x">The x-offset</param>
 <param name="y">The y-offset</param>
</member>
<member name="M:Fable.Import.Browser.Document.createTreeWalker(Fable.Import.Browser.Node,Microsoft.FSharp.Core.FSharpOption{System.Double},Microsoft.FSharp.Core.FSharpOption{Fable.Import.Browser.NodeFilter},Microsoft.FSharp.Core.FSharpOption{System.Boolean})">
 <summary>Creates a TreeWalker object that you can use to traverse filtered lists of nodes or elements in a document.</summary>
 <param name="root">The root element or node to start traversing on.</param>
 <param name="whatToShow">The type of nodes or elements to appear in the node list. For more information, see whatToShow.</param>
 <param name="filter">A custom NodeFilter function to use.</param>
 <param name="entityReferenceExpansion">A flag that specifies whether entity reference nodes are expanded.</param>
</member>
<member name="M:Fable.Import.Browser.Document.createTextNode(System.String)">
 <summary>Creates a text string from the specified value.</summary>
 <param name="data">String that specifies the nodeValue property of the text node.</param>
</member>
<member name="M:Fable.Import.Browser.Document.createRange">
<summary>
 Returns an empty range object that has both of its boundary points positioned at the beginning of the document.
</summary>
</member>
<member name="M:Fable.Import.Browser.Document.createNodeIterator(Fable.Import.Browser.Node,Microsoft.FSharp.Core.FSharpOption{System.Double},Microsoft.FSharp.Core.FSharpOption{Fable.Import.Browser.NodeFilter},Microsoft.FSharp.Core.FSharpOption{System.Boolean})">
 <summary>Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.</summary>
 <param name="root">The root element or node to start traversing on.</param>
 <param name="whatToShow">The type of nodes or elements to appear in the node list</param>
 <param name="filter">A custom NodeFilter function to use. For more information, see filter. Use null for no filter.</param>
 <param name="entityReferenceExpansion">A flag that specifies whether entity reference nodes are expanded.</param>
</member>
<member name="M:Fable.Import.Browser.Document.createElement_a">
 <summary>Creates an instance of the element for the specified tag.</summary>
 <param name="tagName">The name of an element.</param>
</member>
<member name="M:Fable.Import.Browser.Document.createDocumentFragment">
<summary>
 Creates a new document.
</summary>
</member>
<member name="M:Fable.Import.Browser.Document.createComment(System.String)">
 <summary>Creates a comment object with the specified data.</summary>
 <param name="data">Sets the comment object's data.</param>
</member>
<member name="M:Fable.Import.Browser.Document.createAttribute(System.String)">
 <summary>Creates an attribute object with a specified name.</summary>
 <param name="name">String that sets the attribute object's name.</param>
</member>
<member name="M:Fable.Import.Browser.Document.close">
<summary>
 Closes an output stream and forces the sent data to display.
</summary>
</member>
</members>
</doc>
